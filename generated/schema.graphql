### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Category {
  description: String
  id: Int!
  image: String
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  owner: User!
  ownerId: Int!
  title: String!
}

input CategoryCreateInput {
  createdAt: DateTime
  description: String
  image: String
  items: ItemCreateManyWithoutCategoriesInput
  owner: UserCreateOneWithoutCategoriesInput!
  title: String!
}

input CategoryCreateManyWithoutItemsInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutitemsInput!]
  create: [CategoryCreateWithoutItemsInput!]
}

input CategoryCreateManyWithoutOwnerInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutownerInput!]
  create: [CategoryCreateWithoutOwnerInput!]
}

input CategoryCreateOrConnectWithoutitemsInput {
  create: CategoryCreateWithoutItemsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateOrConnectWithoutownerInput {
  create: CategoryCreateWithoutOwnerInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutItemsInput {
  createdAt: DateTime
  description: String
  image: String
  owner: UserCreateOneWithoutCategoriesInput!
  title: String!
}

input CategoryCreateWithoutOwnerInput {
  createdAt: DateTime
  description: String
  image: String
  items: ItemCreateManyWithoutCategoriesInput
  title: String!
}

input CategoryOwnerIdTitleCompoundUniqueInput {
  ownerId: Int!
  title: String!
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  NOT: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
  ownerId: IntFilter
  title: StringFilter
}

input CategoryUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutCategoriesInput
  owner: UserUpdateOneRequiredWithoutCategoriesInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyWithoutItemsInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutitemsInput!]
  create: [CategoryCreateWithoutItemsInput!]
  delete: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutItemsInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutItemsInput!]
}

input CategoryUpdateManyWithoutOwnerInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutownerInput!]
  create: [CategoryCreateWithoutOwnerInput!]
  delete: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutOwnerInput!]
}

input CategoryUpdateManyWithWhereWithoutItemsInput {
  data: CategoryUpdateManyMutationInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateManyWithWhereWithoutOwnerInput {
  data: CategoryUpdateManyMutationInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateWithoutItemsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutCategoriesInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateWithoutOwnerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutCategoriesInput
  title: StringFieldUpdateOperationsInput
}

input CategoryUpdateWithWhereUniqueWithoutItemsInput {
  data: CategoryUpdateWithoutItemsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpdateWithWhereUniqueWithoutOwnerInput {
  data: CategoryUpdateWithoutOwnerInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpsertWithWhereUniqueWithoutItemsInput {
  create: CategoryCreateWithoutItemsInput!
  update: CategoryUpdateWithoutItemsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpsertWithWhereUniqueWithoutOwnerInput {
  create: CategoryCreateWithoutOwnerInput!
  update: CategoryUpdateWithoutOwnerInput!
  where: CategoryWhereUniqueInput!
}

input CategoryWhereUniqueInput {
  id: Int
  ownerId_title: CategoryOwnerIdTitleCompoundUniqueInput
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumSparkNullableFilter {
  equals: Spark
  in: [Spark!]
  not: NestedEnumSparkNullableFilter
  notIn: [Spark!]
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Item {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  count: Int!
  description: String!
  id: Int!
  image: String
  link: String
  locations(after: LocationWhereUniqueInput, before: LocationWhereUniqueInput, first: Int, last: Int): [Location!]!
  model: String
  monetaryValue: Float
  notes: String
  owner: User!
  ownerId: Int!
  spark: Spark
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
}

input ItemCreateInput {
  categories: CategoryCreateManyWithoutItemsInput
  count: Int
  createdAt: DateTime
  description: String!
  image: String
  link: String
  locations: LocationCreateManyWithoutItemsInput
  model: String
  monetaryValue: Float
  notes: String
  owner: UserCreateOneWithoutItemsInput!
  spark: Spark
  tags: TagCreateManyWithoutItemsInput
  updatedAt: DateTime
}

input ItemCreateManyWithoutCategoriesInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutcategoriesInput!]
  create: [ItemCreateWithoutCategoriesInput!]
}

input ItemCreateManyWithoutLocationsInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutlocationsInput!]
  create: [ItemCreateWithoutLocationsInput!]
}

input ItemCreateManyWithoutOwnerInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutownerInput!]
  create: [ItemCreateWithoutOwnerInput!]
}

input ItemCreateManyWithoutTagsInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithouttagsInput!]
  create: [ItemCreateWithoutTagsInput!]
}

input ItemCreateOrConnectWithoutcategoriesInput {
  create: ItemCreateWithoutCategoriesInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutlocationsInput {
  create: ItemCreateWithoutLocationsInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutownerInput {
  create: ItemCreateWithoutOwnerInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithouttagsInput {
  create: ItemCreateWithoutTagsInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateWithoutCategoriesInput {
  count: Int
  createdAt: DateTime
  description: String!
  image: String
  link: String
  locations: LocationCreateManyWithoutItemsInput
  model: String
  monetaryValue: Float
  notes: String
  owner: UserCreateOneWithoutItemsInput!
  spark: Spark
  tags: TagCreateManyWithoutItemsInput
  updatedAt: DateTime
}

input ItemCreateWithoutLocationsInput {
  categories: CategoryCreateManyWithoutItemsInput
  count: Int
  createdAt: DateTime
  description: String!
  image: String
  link: String
  model: String
  monetaryValue: Float
  notes: String
  owner: UserCreateOneWithoutItemsInput!
  spark: Spark
  tags: TagCreateManyWithoutItemsInput
  updatedAt: DateTime
}

input ItemCreateWithoutOwnerInput {
  categories: CategoryCreateManyWithoutItemsInput
  count: Int
  createdAt: DateTime
  description: String!
  image: String
  link: String
  locations: LocationCreateManyWithoutItemsInput
  model: String
  monetaryValue: Float
  notes: String
  spark: Spark
  tags: TagCreateManyWithoutItemsInput
  updatedAt: DateTime
}

input ItemCreateWithoutTagsInput {
  categories: CategoryCreateManyWithoutItemsInput
  count: Int
  createdAt: DateTime
  description: String!
  image: String
  link: String
  locations: LocationCreateManyWithoutItemsInput
  model: String
  monetaryValue: Float
  notes: String
  owner: UserCreateOneWithoutItemsInput!
  spark: Spark
  updatedAt: DateTime
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput!]
  count: IntFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  image: StringNullableFilter
  link: StringNullableFilter
  model: StringNullableFilter
  monetaryValue: FloatNullableFilter
  NOT: [ItemScalarWhereInput!]
  notes: StringNullableFilter
  OR: [ItemScalarWhereInput!]
  ownerId: IntFilter
  spark: EnumSparkNullableFilter
  updatedAt: DateTimeFilter
}

input ItemUpdateInput {
  categories: CategoryUpdateManyWithoutItemsInput
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  locations: LocationUpdateManyWithoutItemsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutItemsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutItemsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateManyMutationInput {
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateManyWithoutCategoriesInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutcategoriesInput!]
  create: [ItemCreateWithoutCategoriesInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutCategoriesInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input ItemUpdateManyWithoutLocationsInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutlocationsInput!]
  create: [ItemCreateWithoutLocationsInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutLocationsInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutLocationsInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutLocationsInput!]
}

input ItemUpdateManyWithoutOwnerInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutownerInput!]
  create: [ItemCreateWithoutOwnerInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutOwnerInput!]
}

input ItemUpdateManyWithoutTagsInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithouttagsInput!]
  create: [ItemCreateWithoutTagsInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ItemUpdateManyWithWhereWithoutTagsInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutTagsInput!]
}

input ItemUpdateManyWithWhereWithoutCategoriesInput {
  data: ItemUpdateManyMutationInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateManyWithWhereWithoutLocationsInput {
  data: ItemUpdateManyMutationInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateManyWithWhereWithoutOwnerInput {
  data: ItemUpdateManyMutationInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateManyWithWhereWithoutTagsInput {
  data: ItemUpdateManyMutationInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateWithoutCategoriesInput {
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  locations: LocationUpdateManyWithoutItemsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutItemsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutItemsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateWithoutLocationsInput {
  categories: CategoryUpdateManyWithoutItemsInput
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutItemsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutItemsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateWithoutOwnerInput {
  categories: CategoryUpdateManyWithoutItemsInput
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  locations: LocationUpdateManyWithoutItemsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutItemsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateWithoutTagsInput {
  categories: CategoryUpdateManyWithoutItemsInput
  count: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  locations: LocationUpdateManyWithoutItemsInput
  model: NullableStringFieldUpdateOperationsInput
  monetaryValue: NullableFloatFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutItemsInput
  spark: NullableEnumSparkFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateWithWhereUniqueWithoutCategoriesInput {
  data: ItemUpdateWithoutCategoriesInput!
  where: ItemWhereUniqueInput!
}

input ItemUpdateWithWhereUniqueWithoutLocationsInput {
  data: ItemUpdateWithoutLocationsInput!
  where: ItemWhereUniqueInput!
}

input ItemUpdateWithWhereUniqueWithoutOwnerInput {
  data: ItemUpdateWithoutOwnerInput!
  where: ItemWhereUniqueInput!
}

input ItemUpdateWithWhereUniqueWithoutTagsInput {
  data: ItemUpdateWithoutTagsInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutCategoriesInput {
  create: ItemCreateWithoutCategoriesInput!
  update: ItemUpdateWithoutCategoriesInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutLocationsInput {
  create: ItemCreateWithoutLocationsInput!
  update: ItemUpdateWithoutLocationsInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutOwnerInput {
  create: ItemCreateWithoutOwnerInput!
  update: ItemUpdateWithoutOwnerInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutTagsInput {
  create: ItemCreateWithoutTagsInput!
  update: ItemUpdateWithoutTagsInput!
  where: ItemWhereUniqueInput!
}

input ItemWhereUniqueInput {
  id: Int
}

type Location {
  id: Int!
  image: String
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  owner: User!
  ownerId: Int!
  title: String!
}

input LocationCreateInput {
  createdAt: DateTime
  image: String
  items: ItemCreateManyWithoutLocationsInput
  owner: UserCreateOneWithoutLocationsInput!
  title: String!
}

input LocationCreateManyWithoutItemsInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutitemsInput!]
  create: [LocationCreateWithoutItemsInput!]
}

input LocationCreateManyWithoutOwnerInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutownerInput!]
  create: [LocationCreateWithoutOwnerInput!]
}

input LocationCreateOrConnectWithoutitemsInput {
  create: LocationCreateWithoutItemsInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutownerInput {
  create: LocationCreateWithoutOwnerInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateWithoutItemsInput {
  createdAt: DateTime
  image: String
  owner: UserCreateOneWithoutLocationsInput!
  title: String!
}

input LocationCreateWithoutOwnerInput {
  createdAt: DateTime
  image: String
  items: ItemCreateManyWithoutLocationsInput
  title: String!
}

input LocationOwnerIdTitleCompoundUniqueInput {
  ownerId: Int!
  title: String!
}

input LocationScalarWhereInput {
  AND: [LocationScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  image: StringNullableFilter
  NOT: [LocationScalarWhereInput!]
  OR: [LocationScalarWhereInput!]
  ownerId: IntFilter
  title: StringFilter
}

input LocationUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutLocationsInput
  owner: UserUpdateOneRequiredWithoutLocationsInput
  title: StringFieldUpdateOperationsInput
}

input LocationUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input LocationUpdateManyWithoutItemsInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutitemsInput!]
  create: [LocationCreateWithoutItemsInput!]
  delete: [LocationWhereUniqueInput!]
  deleteMany: [LocationScalarWhereInput!]
  disconnect: [LocationWhereUniqueInput!]
  set: [LocationWhereUniqueInput!]
  update: [LocationUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [LocationUpdateManyWithWhereWithoutItemsInput!]
  upsert: [LocationUpsertWithWhereUniqueWithoutItemsInput!]
}

input LocationUpdateManyWithoutOwnerInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutownerInput!]
  create: [LocationCreateWithoutOwnerInput!]
  delete: [LocationWhereUniqueInput!]
  deleteMany: [LocationScalarWhereInput!]
  disconnect: [LocationWhereUniqueInput!]
  set: [LocationWhereUniqueInput!]
  update: [LocationUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [LocationUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [LocationUpsertWithWhereUniqueWithoutOwnerInput!]
}

input LocationUpdateManyWithWhereWithoutItemsInput {
  data: LocationUpdateManyMutationInput!
  where: LocationScalarWhereInput!
}

input LocationUpdateManyWithWhereWithoutOwnerInput {
  data: LocationUpdateManyMutationInput!
  where: LocationScalarWhereInput!
}

input LocationUpdateWithoutItemsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutLocationsInput
  title: StringFieldUpdateOperationsInput
}

input LocationUpdateWithoutOwnerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutLocationsInput
  title: StringFieldUpdateOperationsInput
}

input LocationUpdateWithWhereUniqueWithoutItemsInput {
  data: LocationUpdateWithoutItemsInput!
  where: LocationWhereUniqueInput!
}

input LocationUpdateWithWhereUniqueWithoutOwnerInput {
  data: LocationUpdateWithoutOwnerInput!
  where: LocationWhereUniqueInput!
}

input LocationUpsertWithWhereUniqueWithoutItemsInput {
  create: LocationCreateWithoutItemsInput!
  update: LocationUpdateWithoutItemsInput!
  where: LocationWhereUniqueInput!
}

input LocationUpsertWithWhereUniqueWithoutOwnerInput {
  create: LocationCreateWithoutOwnerInput!
  update: LocationUpdateWithoutOwnerInput!
  where: LocationWhereUniqueInput!
}

input LocationWhereUniqueInput {
  id: Int
  ownerId_title: LocationOwnerIdTitleCompoundUniqueInput
}

type Mutation {
  createOneCategory(data: CategoryCreateInput!): Category!
  createOneItem(data: ItemCreateInput!): Item!
  createOneLocation(data: LocationCreateInput!): Location!
  createOneTag(data: TagCreateInput!): Tag!
  createOneUser(data: UserCreateInput!): User!
  deleteOneCategory(where: CategoryWhereUniqueInput!): Category
  deleteOneItem(where: ItemWhereUniqueInput!): Item
  updateOneCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateOneItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateOneLocation(data: LocationUpdateInput!, where: LocationWhereUniqueInput!): Location
  updateOneTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  upsertOneItem(create: ItemCreateInput!, update: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumSparkNullableFilter {
  equals: Spark
  in: [Spark!]
  not: NestedEnumSparkNullableFilter
  notIn: [Spark!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableEnumSparkFieldUpdateOperationsInput {
  set: Spark
}

input NullableFloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  categoriesByUser(ownerId: Int): [Category]
  category(where: CategoryWhereUniqueInput!): Category
  item(where: ItemWhereUniqueInput!): Item
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  location(where: LocationWhereUniqueInput!): Location
  locations(after: LocationWhereUniqueInput, before: LocationWhereUniqueInput, first: Int, last: Int): [Location!]!
  locationsByUser(ownerId: Int): [Location]
  tag(where: TagWhereUniqueInput!): Tag
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  tagsByUser(ownerId: Int): [Tag]
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum Spark {
  LIKE
  LOSE
  LOVE
  NEED
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  id: Int!
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  owner: User!
  ownerId: Int!
  title: String!
}

input TagCreateInput {
  createdAt: DateTime
  items: ItemCreateManyWithoutTagsInput
  owner: UserCreateOneWithoutTagsInput!
  title: String!
}

input TagCreateManyWithoutItemsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutitemsInput!]
  create: [TagCreateWithoutItemsInput!]
}

input TagCreateManyWithoutOwnerInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutownerInput!]
  create: [TagCreateWithoutOwnerInput!]
}

input TagCreateOrConnectWithoutitemsInput {
  create: TagCreateWithoutItemsInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutownerInput {
  create: TagCreateWithoutOwnerInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutItemsInput {
  createdAt: DateTime
  owner: UserCreateOneWithoutTagsInput!
  title: String!
}

input TagCreateWithoutOwnerInput {
  createdAt: DateTime
  items: ItemCreateManyWithoutTagsInput
  title: String!
}

input TagOwnerIdTitleCompoundUniqueInput {
  ownerId: Int!
  title: String!
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  ownerId: IntFilter
  title: StringFilter
}

input TagUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutTagsInput
  owner: UserUpdateOneRequiredWithoutTagsInput
  title: StringFieldUpdateOperationsInput
}

input TagUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithoutItemsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutitemsInput!]
  create: [TagCreateWithoutItemsInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutItemsInput!]
  updateMany: [TagUpdateManyWithWhereWithoutItemsInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutItemsInput!]
}

input TagUpdateManyWithoutOwnerInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutownerInput!]
  create: [TagCreateWithoutOwnerInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [TagUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutOwnerInput!]
}

input TagUpdateManyWithWhereWithoutItemsInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithWhereWithoutOwnerInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateWithoutItemsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  owner: UserUpdateOneRequiredWithoutTagsInput
  title: StringFieldUpdateOperationsInput
}

input TagUpdateWithoutOwnerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutTagsInput
  title: StringFieldUpdateOperationsInput
}

input TagUpdateWithWhereUniqueWithoutItemsInput {
  data: TagUpdateWithoutItemsInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutOwnerInput {
  data: TagUpdateWithoutOwnerInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutItemsInput {
  create: TagCreateWithoutItemsInput!
  update: TagUpdateWithoutItemsInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutOwnerInput {
  create: TagCreateWithoutOwnerInput!
  update: TagUpdateWithoutOwnerInput!
  where: TagWhereUniqueInput!
}

input TagWhereUniqueInput {
  id: Int
  ownerId_title: TagOwnerIdTitleCompoundUniqueInput
}

type User {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  email: String!
  id: Int!
  image: String
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  locations(after: LocationWhereUniqueInput, before: LocationWhereUniqueInput, first: Int, last: Int): [Location!]!
  name: String
  password: String!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
}

input UserCreateInput {
  categories: CategoryCreateManyWithoutOwnerInput
  createdAt: DateTime
  email: String!
  image: String
  items: ItemCreateManyWithoutOwnerInput
  locations: LocationCreateManyWithoutOwnerInput
  name: String
  password: String!
  tags: TagCreateManyWithoutOwnerInput
  updatedAt: DateTime
}

input UserCreateOneWithoutCategoriesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutcategoriesInput
  create: UserCreateWithoutCategoriesInput
}

input UserCreateOneWithoutItemsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutitemsInput
  create: UserCreateWithoutItemsInput
}

input UserCreateOneWithoutLocationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutlocationsInput
  create: UserCreateWithoutLocationsInput
}

input UserCreateOneWithoutTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithouttagsInput
  create: UserCreateWithoutTagsInput
}

input UserCreateOrConnectWithoutcategoriesInput {
  create: UserCreateWithoutCategoriesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutitemsInput {
  create: UserCreateWithoutItemsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutlocationsInput {
  create: UserCreateWithoutLocationsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithouttagsInput {
  create: UserCreateWithoutTagsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutCategoriesInput {
  createdAt: DateTime
  email: String!
  image: String
  items: ItemCreateManyWithoutOwnerInput
  locations: LocationCreateManyWithoutOwnerInput
  name: String
  password: String!
  tags: TagCreateManyWithoutOwnerInput
  updatedAt: DateTime
}

input UserCreateWithoutItemsInput {
  categories: CategoryCreateManyWithoutOwnerInput
  createdAt: DateTime
  email: String!
  image: String
  locations: LocationCreateManyWithoutOwnerInput
  name: String
  password: String!
  tags: TagCreateManyWithoutOwnerInput
  updatedAt: DateTime
}

input UserCreateWithoutLocationsInput {
  categories: CategoryCreateManyWithoutOwnerInput
  createdAt: DateTime
  email: String!
  image: String
  items: ItemCreateManyWithoutOwnerInput
  name: String
  password: String!
  tags: TagCreateManyWithoutOwnerInput
  updatedAt: DateTime
}

input UserCreateWithoutTagsInput {
  categories: CategoryCreateManyWithoutOwnerInput
  createdAt: DateTime
  email: String!
  image: String
  items: ItemCreateManyWithoutOwnerInput
  locations: LocationCreateManyWithoutOwnerInput
  name: String
  password: String!
  updatedAt: DateTime
}

input UserUpdateInput {
  categories: CategoryUpdateManyWithoutOwnerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutOwnerInput
  locations: LocationUpdateManyWithoutOwnerInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutOwnerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutCategoriesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutcategoriesInput
  create: UserCreateWithoutCategoriesInput
  update: UserUpdateWithoutCategoriesInput
  upsert: UserUpsertWithoutCategoriesInput
}

input UserUpdateOneRequiredWithoutItemsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutitemsInput
  create: UserCreateWithoutItemsInput
  update: UserUpdateWithoutItemsInput
  upsert: UserUpsertWithoutItemsInput
}

input UserUpdateOneRequiredWithoutLocationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutlocationsInput
  create: UserCreateWithoutLocationsInput
  update: UserUpdateWithoutLocationsInput
  upsert: UserUpsertWithoutLocationsInput
}

input UserUpdateOneRequiredWithoutTagsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithouttagsInput
  create: UserCreateWithoutTagsInput
  update: UserUpdateWithoutTagsInput
  upsert: UserUpsertWithoutTagsInput
}

input UserUpdateWithoutCategoriesInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutOwnerInput
  locations: LocationUpdateManyWithoutOwnerInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutOwnerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutItemsInput {
  categories: CategoryUpdateManyWithoutOwnerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  locations: LocationUpdateManyWithoutOwnerInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutOwnerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutLocationsInput {
  categories: CategoryUpdateManyWithoutOwnerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutOwnerInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutOwnerInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateWithoutTagsInput {
  categories: CategoryUpdateManyWithoutOwnerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  items: ItemUpdateManyWithoutOwnerInput
  locations: LocationUpdateManyWithoutOwnerInput
  name: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutCategoriesInput {
  create: UserCreateWithoutCategoriesInput!
  update: UserUpdateWithoutCategoriesInput!
}

input UserUpsertWithoutItemsInput {
  create: UserCreateWithoutItemsInput!
  update: UserUpdateWithoutItemsInput!
}

input UserUpsertWithoutLocationsInput {
  create: UserCreateWithoutLocationsInput!
  update: UserUpdateWithoutLocationsInput!
}

input UserUpsertWithoutTagsInput {
  create: UserCreateWithoutTagsInput!
  update: UserUpdateWithoutTagsInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
